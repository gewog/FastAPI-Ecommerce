"""
API –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
"""
from typing import Annotated

from fastapi import APIRouter, Depends

from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from app.models.category import Category # –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é SQLAlchemy –º–æ–¥–µ–ª—å
from app.backend.db_depends import get_session # –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

session = Annotated[AsyncSession, Depends(get_session)] # –°–æ–∑–¥–∞—é —Å–µ—Å—Å–∏—é.


router = APIRouter(prefix="/category",
                   tags=["category üçîüçëüçÖ"])

@router.get("/all_categories",  summary="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
async def get_all_categories(session: session):
    """API –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    res = select(Category)
    res2 = await session.execute(res)
    return res2.scalars().one().name

@router.post("/create", summary="–°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
async def create_category():
    """API —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    ...

@router.put("/update_category",  summary="–û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
async def update_category():
    """API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)"""
    ...

@router.delete("/delete",  summary="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
async def delete_category():
    """API —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    ...